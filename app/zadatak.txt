-napraviti novi laravel projekat sa imenom ‘blog’
-kreirati bazu podataka ‘blog’
-povezati aplikaciju sa bazom podataka preko .env fajla
-izgenerisati migraciju za posts tabelu (id, title, body, timestamps)
-‘Ubaciti’ nekoliko test post-ova
-Izgenerisati model Post - artisan make:model
-Napraviti 2 stranice - all posts i single post po ugledu na prethodne dane
-Svu interakciju sa bazom uraditi preko modela (all(), find($id))
-Obrisati migraciju za posts tabelu i Post model
-Napraviti model i migraciju uz pomoc jedne komande: artisan make:model Post -m
-U migraciji dodati (pored gore pomenutih polja) ‘published’ polje tipa boolean
-Pokrenuti migracije
-‘Ubaciti’ nekoliko test post-ova
-Na modelu Post napraviti metod koji ce vracati published i drugi metod koji ce vracati unpublished post-ove - return self::where(‘published’, 1)->get()
-Izgenerisati PostsController - artisan make:controller PostsController
-Izmeniti rute da idu preko kontrolera
  -Svi postovi - ‘PostsController@index’
  -Single post - ‘PostsController@show’
-Dodati odgovarajuce metode u kontroler - inde) i show()
- Prebaciti logiku iz ruta koje smo dosad koristili u odgovarajuce metode kontrolera


- Napraviti novi folder unutar ‘views’ foldera sa imenom ‘layouts’
- U novokreiranom folderu napraviti novi blade fajl - master.blade.php
- Sadrzaj tog fajla - najbazicniji html sa ,  i <body> tag-ovima
- U okviru <body> tagova, dodati @yield(‘content’) blade-ovu direktivu
- Izmeniti posts.index i posts.show view-ove da ‘extenduju’ master view:
    @extends(‘layouts.master’)
    @section(‘content’)
    U okviru section-a umetnuti nas html koji ispisuje postove/jedan post

- Posetiti twitter bootstrap (verzija 4) sajt (https://v4-alpha.getbootstrap.com/)
- Examples sekcija - blog example
- View-source -> iskopirati citav sadrzaj i ubaciti u nas master.blade.php fajl umesto postojeceg html-a
- Pri dnu koda obrisati sekciju ‘Bootstrap core JavaScript’, sve do tag-a
- Naci u bootstrap-ovoj dokumentaciji https://v4-alpha.getbootstrap.com/getting-started/introduction/#quick-start
link do CDN-a koji host-uje osnovni (core) bootstrap css.
- Iskopirati taj link i umetnuti ga u nas novi master.blade.php ispod komentara


- Create post form- Registrovati  novu rutu (/posts/create) i stranicu za form-u-
- Na Twitter bootsrap sajtu naci primer html form-e (sekcija ‘css’)- Iskopirati i ubaciti u nas novi view posts.create-
- Izmeniti form-u da ima samo 2 polja koja nam trebaju - title i body-
- Za form method postaviti ‘POST’ a za action ‘/posts’-
- Registrovati novu rutu (Route::post) koja ce biti odgovorna za procesuiranje form-e-
- Dodati odgovarajuci metod u kontroler-
- Probajte da resite csrf exception uz pomoc dokumentacije
- $post = New Post;  $post->title = request(‘title’); $post->save();- Dodati redirekciju na kraju metoda - return redirect(‘/posts’)
- Validation- U kontroler, pre kreiranja post-a, dodati validaciju
$this->validate(request(),
- [‘title’ => ‘required’]) - za sva polja odraditi-
- Na view-u koji drzi form-u dodati html za prikaz greski
foreach($errors->all() as $error)    {{ $error }}-
- Izdvojiti greske u partial view

Comments
- Napraviti model i migraciju za komentare
- Dodati ‘rucno’ par komentara
- pokrrenuti php artisan tinker i proveriti da li su komentari kreirani
- Napraviti relacije izmedju modela Post i Comment
- Post - return $this->hasMany(Comment::class);
- Comment - return $this->belongsTo(Post::class);
- Na single post stranici ispisati komentare vezane za taj post   $post->comments as $comment
- Ispod komentara dodati form-u na kojoj korisnik moze da ostavi komentar
- Textarea + submit dugme (kod o ugledu na form-u za kreiranje post-a)
- Obavezno izgenerisati novi CommentsController koji ce biti zaduzen za procesuiranje form-e
- Prvo napraviti da se komentar kreira uz pomoc Comment modela ,
  a kasnije izmestiti u Post model i iskoristiti relaciju za kreiranje komentara
- Nakon uspesnog kreiranja redirektovati korisnika na istu stranu
- Napraviti i validaciju za comments form-u sa greskama

VEZBA 1 - REGISTRACIJA

- Otvoriti migraciju za kreiranje korisnika (već napravljena).
- Proći zajedno sa kandidatima ispitujući ih, da obnove gradivo vezano za ovaj deo
- Dodati `get` rutu-`php artisan make:controller RegisterController`
- Dodati `create` akciju-Kreirati view fajl. Ok je kopirati posts/create fajl radi bržeg rada i
  izmeniti potrebno (ako je predavaču tako lakše)
- Proveriti da li radi dodata ruta i da li se otvara forma za registraciju
- Dodati `store` akciju--Validacija--Kreiranje korisnika--Ulogovati korisnika--Redirekcija
- Dodati rutu za store
- Proći nekoliko pogrešnih unosa da se dobije error poruka.
- Napomenuti u kojem delu se ispisuje greska u view fajlu
- Uraditi uspešnu registraciju
- Proveriti da li je korisnik dodat u bazi podataka
- Proći pojedinačno sa kandidatima da li svi razumeju urađeno i komitovati

VEZBA 2 - ENKRIPTOVANJE LOZINKE

-Otvoriti bazu podataka i objasniti zašto je loše da na taj način čuvamo podatke
-Obrisati korisnike iz baze i otvoriti registracionu formu
-Dodati enkriptovanje
-Pokazati bazu podataka i kako sad izgleda sačuvana lozinka
-Proći pojedinačno sa kandidatima da li svi razumeju urađeno i komitovati


VEZBA 3 - LOGOUT

-Objasniti zašto je korisnik u ovom trenutku ulogovan
-`php artisan make:controller LoginController`
-Dodati rutu za logout
-Dodati akciju u kontroleru za logout
-Dodati name u hederu
-Dodati link u hederu za logout
-Izvrsiti logout. Dobija se error
-Dodati uslov na name i logout link da se samo ulogovanim korisnicima to prikazuje
-Proći pojedinačno sa kandidatima da li svi razumeju urađeno i komitovati


VEZBA 4 - LOGIN

-Dodati rute za login (get i post)
-Dodati akciju create
-Kreirati view fajl. Ok je kopirati register/create fajl radi bržeg rada i izmeniti potrebno (ako je predavaču tako lakše)
-Proveriti da li radi dodata ruta i da li se otvara forma za login
-Dodati akciju store i implementirati login u njoj. Objasniti detaljno sta se desava, sta radi sve attempt funkcija itd.
-Uraditi pogresan login i izazvati gresku. Napomenuti u kojem delu se ispisuje greska u view fajlu
-Uraditi dobar login
-Dodati login link u hederu
-Ponoviti logout/login
-Proći pojedinačno sa kandidatima da li svi razumeju urađeno i komitovati

Procitaj middleware iz dokumnetacije